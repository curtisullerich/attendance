<?xml version="1.0" encoding="utf-8"?>
<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">
	<application>isucfvmb-attendance</application>
	<version>1</version>

	<!--
	By default, App Engine sends requests serially to a given web server.
	To allow App Engine to send multiple requests in parallel specify:

		<threadsafe>true</threadsafe>
	-->

	<!-- Configure java.util.logging -->
	<system-properties>
		<property name="java.util.logging.config.file" value="WEB-INF/logging.properties"/>
	</system-properties>
	
	<static-files>
		<include path = "/JSPPages/*.png" />
		<include path = "/JSPPages/*.jsp" />
		<include path = "/JSPPages/sha.js" />
		<include path = "/JSPPages/script.js" />
		<include path = "/JSPPages/404.css" />
		
		<include path = "/MobileApp/FieldAppCSS.css" />
		<include path = "/MobileApp/*.html" />
		<include path = "/MobileApp/*.js" />
		<include path = "/MobileApp/*.jpg" />
		<include path = "/favicon.ico" />
		
	</static-files>
	
	<sessions-enabled>true</sessions-enabled>
	 <!--
	HTTP Sessions are disabled by default. To enable HTTP sessions specify:

	<sessions-enabled>true</sessions-enabled>

	It's possible to reduce request latency by configuring your application to
	asynchronously write HTTP session data to the datastore:

	<async-session-persistence enabled="true" />

	With this feature enabled, there is a very small chance your app will see
	stale session data. For details, see
	http://code.google.com/appengine/docs/java/config/appconfig.html#Enabling_Sessions
	-->

</appengine-web-app>
